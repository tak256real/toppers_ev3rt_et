INCLUDE("app_common.cfg");

#include "app.h"
#include "sys/arch/timer/Timer.h"

DOMAIN(TDOM_APP) {

// タスク //
// CRE_TSK(ID tskid：タスクID, {ATR tskatr：タスク属性, intptr_t exinf：拡張情報 , TASK task：起動番地, PRI itskpri：起動時優先度, SIZE stksz：ｽﾀｯｸｻｲｽﾞ[Byte], VP stk：ｽﾀｯｸ先頭番地});
CRE_TSK(ID_TASK_MAIN,{TA_ACT, 0 , TaskMain, MINIMUM_PRIORITY_VAL, STACK_SIZE, NULL });
CRE_TSK(ID_TASK_HIGH_PRIORITY,{TA_NULL, 0, TaskHighPriority, HIGH_PRIORITY_VAL, STACK_SIZE, NULL });
CRE_TSK(ID_TASK_ENGINE,{TA_NULL, 0, TaskEngine, BASE_PRIORITY_VAL, 8192, NULL });
//CRE_TSK(ID_TASK_COMMUNICATION,{TA_NULL, 0x00000000, TaskCommunication, 8, STACK_SIZE, NULL });
//CRE_TSK(ID_TASK_LONG_TERM_OPERATION,{TA_NULL, 0x00000000, TaskLongTermOperation, LOW_PRIORITY_VAL, STACK_SIZE, NULL });
//CRE_TSK(ID_TASK_SHORT_CYCLE_OPERATION,{TA_NULL, 0x00000000, TaskShortCycleOperation, 2, STACK_SIZE, NULL });
CRE_TSK(ID_TASK_DEBUG_CONSOLE,{TA_NULL, 0, TaskDebugConsole, MINIMUM_PRIORITY_VAL - 1, STACK_SIZE, NULL });

// セマフォ //
// CRE_SEM(ID semid：セマフォID, {ATR sematr：属性,  UINT isemcnt：資源数の初期値,  UINT maxsem：最大資源数});
// イベントフラグ //
// CRE_FLG(ID flgid：イベントフラグID, ATR flgatr：属性 , FLGPTN iflgptn：ﾋﾞｯﾄﾊﾟﾀｰﾝの初期値});
CRE_FLG(ID_EFLG_SHORT_TERM_OPERATION, {TA_NULL, 0});
// データキュー //
// CRE_DTQ(ID dtqid：データキューID, {ATR dtqatr：属性, UINT dtqcnt：領域の容量(データの個数) , VP dtq：領域の先頭番地});
CRE_DTQ(ID_MSG_BOX_MAIN, {TA_NULL, 100, NULL});
CRE_DTQ(ID_MSG_BOX_HIGH_PRIORITY, {TA_NULL, 100, NULL});
CRE_DTQ(ID_MSG_BOX_ENGINE, {TA_NULL, 100, NULL});
CRE_DTQ(ID_MSG_BOX_DEBUG_CONSOLE, {TA_NULL, 64, NULL});
//CRE_DTQ(ID_MSG_BOX_COMMUNICATION, {TA_NULL, 0x00000064, NULL});
//CRE_DTQ(ID_MSG_BOX_LONG_TERM_OPERATION, {TA_NULL, 0x00000064, NULL});
//CRE_DTQ(ID_MSG_BOX_SHORT_CYCLE_OPERATION, {TA_NULL, 0x00000064, NULL});
// メールボックス //
// CRE_MBX(ID mbxid：メールボックスID, {ATR mbxatr：属性 , PRI maxmpri：ﾒｯｾｰｼﾞ優先度の最大値, VP mbrihd：優先度別のﾒｯｾｰｼﾞｷｭｰﾍｯﾀﾞ領域の先頭番地 });
// ミューテックス //
// CRE_MTX(ID mtxid：ミューテックスID, {ATR mtxatr：属性 , PRI ceilpri：上限優先度});
// メッセージバッファ //
// CRE_MBF(ID mbfid：メッセージバッファID, {ATR mbfatr：属性, UINT maxmsz：ﾒｯｾｰｼﾞの最大ｻｲｽﾞ[BYTE], SIZE mbfsz：領域ｻｲｽﾞ[BYTE], VP mbf：ﾒｯｾｰｼﾞﾊﾞｯﾌｧ領域の先頭番地});
// 固定長メモリプール //
// CRE_MPF(ID mpfid：固定長メモリプールID, {ATR mpfatr：属性 , UINT blkcnt：獲得できるﾒﾓﾘﾌﾞﾛｯｸ数(個数), UINT blksz：ﾒﾓﾘﾌﾞﾛｯｸのｻｲｽﾞ[BYTE]});
// 可変長メモリプール //
// CRE_MPL(ID mplid：可変長メモリプールID, {ATR mplatr：属性, SIZE mplsz：領域ｻｲｽﾞ[BYTE], VP mpl：可変長ﾒﾓﾘﾌﾟｰﾙ領域の先頭番地 });
// 周期ハンドラ //
// CRE_CYC(ID cycid：周期ハンドラID, {ATR cycatr：属性, VP_INT exinf：拡張情報, FP cychdr：周期ﾊﾝﾄﾞﾗの起動番地, RELTIM cyctim：周期ﾊﾝﾄﾞﾗの起動周期, RELTIM cycphs： 周期ﾊﾝﾄﾞﾗの起動位相});
// 割り込みハンドラ //
// DEF_INH(INHNO inhno：割込みハンドラ番号 , {ATR inhatr：属性, FP inthdr：割込みﾊﾝﾄﾞﾗの起動番地});
// 例外ハンドラ //
// DEF_EXC(EXCNO excno：CPU例外ハンドラ番号, {ATR excatr：CPU 例外ﾊﾝﾄﾞﾗ属性, FP exchdr：CPU 例外ﾊﾝﾄﾞﾗの起動番地});
// 初期化ルーチン //
// ATT_INI(ATR iniatr：属性, {VP_INT exinf：拡張情報 , FP inirtn：初期化ﾙｰﾁﾝの起動番地});
// タスク例外処理定義 //

EV3_CRE_CYC(ID_EV3CYC_1MS, { TA_NULL, 0, Cyc1msecInterval, 1000, 0 });
}

ATT_MOD("app.o");
ATT_MOD("Action.o");
ATT_MOD("EmergencyStopAction.o");
ATT_MOD("LineTraceAction.o");
ATT_MOD("RecliningAction.o");
ATT_MOD("SitWaitAction.o");
ATT_MOD("TailBrakeAction.o");
ATT_MOD("TailRunAction.o");
ATT_MOD("RTOS.o");
ATT_MOD("SubsystemBridge.o");
ATT_MOD("SubsystemIf.o");
ATT_MOD("Timer.o");
ATT_MOD("TimerEvent.o");
ATT_MOD("CollisionCondition.o");
ATT_MOD("CommandCondition.o");
ATT_MOD("Condition.o");
ATT_MOD("DistanceCondition.o");
ATT_MOD("DistanceToObjectCondition.o");
ATT_MOD("EmptyCondition.o");
ATT_MOD("InclinationCondition.o");
ATT_MOD("LineCondition.o");
ATT_MOD("RotationCondition.o");
ATT_MOD("TimeCondition.o");
ATT_MOD("balancer.o");
ATT_MOD("balancer_param.o");
ATT_MOD("Battery.o");
ATT_MOD("Bluetooth.o");
ATT_MOD("ColorSensor.o");
ATT_MOD("GyroSensor.o");
ATT_MOD("init_ev3.o");
ATT_MOD("Motor.o");
ATT_MOD("spec_ev3.o");
ATT_MOD("StateObserver.o");
ATT_MOD("TailControl.o");
ATT_MOD("TouchSensor.o");
ATT_MOD("UltrasonicControl.o");
ATT_MOD("WheelControl.o");
ATT_MOD("LeftCourseScenario.o");
ATT_MOD("RightCourseScenario.o");
ATT_MOD("Scenario.o");
ATT_MOD("Sequence.o");
ATT_MOD("Sequencer.o");
ATT_MOD("Task.o");
ATT_MOD("DebugConsole.o");
ATT_MOD("Engine.o");
ATT_MOD("HighPriority.o");
ATT_MOD("Main.o");
ATT_MOD("Calibration.o");
ATT_MOD("TouchSensorListener.o");
ATT_MOD("PIDControl.o");
